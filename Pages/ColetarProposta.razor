@page "/ColetarProposta"
@inject AppState AppStateData
@inject HttpClient Http
@inject NavigationManager Navigation
@inject IConfiguration Configuration
@using NovaPropostaAnaliseCreditoPWA.Models

<PageTitle>Nova Proposta Para Analise De Credito</PageTitle>

<div class="text-center">
    <h1 class="display-4">Coletar Proposta</h1>
</div>

<div class="form-group">
    <label>CPF</label>
    <input type="text" class="form-control" @bind="AppStateData.cpf" required>
</div>
<div class="form-group">
    <label>Data de Nascimento</label>
    <input type="date" class="form-control" @bind="AppStateData.nascimento" required>
</div>
<div class="form-group">
    <label>Email</label>
    <input type="email" class="form-control" @bind="AppStateData.email" required>
</div>
<div class="form-group">
    <label>Telefone Celular</label>
    <input type="tel" class="form-control" @bind="AppStateData.telefone" required>
</div>

<div class="form-group">
    <br />
</div>

<div class="form-group d-flex justify-content-end">
    <button class="btn btn-primary" @onclick="SubmitForm" disabled="@isSubmitting">Enviar</button>
</div>

@code {
    private IniciaPropostaResponse? iniciaPropostaResponse;
    private bool isSubmitting = false;

    private async Task SubmitForm()
    {
        isSubmitting = true;

        var apiUrl = Configuration["ApiBaseUrl"] + "/api/private/propostas/inicia";

        var requestData = new
        {
            CodOperadora = Configuration["CodOperadora"],
            ChaveIntegrador = Configuration["ChaveIntegrador"],
            CodEstabelecimento = AppStateData.codEstabelecimento,
            CPF = AppStateData.cpf,
            Nascimento = AppStateData.nascimento,
            Celular = AppStateData.telefone,
            Email = AppStateData.email,
            PromotorCPF = AppStateData.cpfPromotor,
            Endereco = new
            {
                Cep = "13417530",
                Logradouro = "string",
                Numero = 1,
                Complemento = "string",
                Bairro = "string",
                Municipio = "string",
                UF = "string"
            }
        };

        var response = await Http.PostAsJsonAsync(apiUrl, requestData);
        if (response.IsSuccessStatusCode)
        {
            iniciaPropostaResponse = await response.Content.ReadFromJsonAsync<IniciaPropostaResponse>();
            if ((iniciaPropostaResponse != null) && (iniciaPropostaResponse.Sucesso))
            {
                AppStateData.iniciaPropostaResponse = iniciaPropostaResponse;
                Navigation.NavigateTo("/ColetarVenctoEntrega");
            }
        }
        isSubmitting = false;

    }

}
